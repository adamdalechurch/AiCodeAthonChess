<!--
    Chess
    step 1: create a board, and assign pieces to default positions
    step 2: create a function to move pieces
    step 3: create a function to check if a move is valid
-->
<html>
<head>
    <title>Chess</title>
    <style>
        #board{
            width: 400px;
            height: 400px;
            border: 1px solid black;
        }
        .row{
            width: 100%;
            height: 12.5%;
        }
        .square{
            width: 12.5%;
            height: 100%;
            float: left;
        }
        .white{
            background-color: white;
        }
        .black{
            background-color: black;
        }
    </style>
</head>
<body>
    <div id="board">
    </div>
<script>
    const backRank = ['R', 'N', 'B', 'Q', 'K', 'B', 'N', 'R'];
    const pawnRank = ['P', 'P', 'P', 'P', 'P', 'P', 'P', 'P'];

    const board = new Board();
    board.create();
    function Board(){
        this.element = document.getElementById('board');
        this.squares = [];
        this.selectedSquare = null;
        this.currentPlayer = 'white';

        this.create = function(){
            for(let i = 0; i < 8; i++){
                let row = document.createElement('div');
                row.className = 'row';
                for(let j = 0; j < 8; j++){
                    let piece = null;

                    if(i == 0)
                        piece = new Piece(j, i, 'black', backRank[j]);
                    else if(i == 1)
                        piece = new Piece(j, i, 'black', pawnRank[j]);
                    else if(i == 6)
                        piece = new Piece(j, i, 'white', pawnRank[j]);
                    else if(i == 7)
                        piece = new Piece(j, i, 'white', backRank[j]);

                    let square = new Square(j, i, piece);
                    row.appendChild(square.element);
                    this.squares.push(square);
                }
                this.element.appendChild(row);
            }
        }

        this.newTurn = function(){
            if(this.currentPlayer == 'white')
                this.currentPlayer = 'black';
            else
                this.currentPlayer = 'white';
            
            if(this.selectedSquare != null)
                this.selectedSquare.deselect();
            this.selectedSquare = null;
        }
    }

    function Square(x, y, piece = null){
        this.x = x;
        this.y = y;
        this.piece = null;
        this.selected = false;
        this.element = document.createElement('div');
        this.element.className = 'square';
        if((x + y) % 2 == 0)
            this.element.className += ' white';
        else
            this.element.className += ' black';

        if(piece != null){
            this.piece = piece;
            this.element.appendChild(piece.element);
        }

        this.select = function(){
            board.selectedSquare = this;
            this.selected = true;
            this.element.style.backgroundColor = 'yellow';
        }

        this.deselect = function(){
            board.selectedSquare = null;
            this.selected = false;
            if((this.x + this.y) % 2 == 0)
                this.element.style.backgroundColor = 'white';
            else
                this.element.style.backgroundColor = 'black';
        }

        this.element.addEventListener('click', () => {
            if(board.selectedSquare == null && this.piece != null 
                && this.piece.color == board.currentPlayer){
                this.select();
                return;
            }

            board.selectedSquare.piece.move(this);
        });
    }

    function Piece(x, y, color, type){
        this.x = x;
        this.y = y;
        this.color = color;
        this.type = type;
        this.isMovedOnce = false;
        this.element = document.createElement('span');
        this.element.className = 'piece' + ' ' + color;
        //make it blue for now
        this.element.style.color = 'blue';
        this.element.innerHTML = type;

        this.move = function(square){
            if(!this.isValidMove(square))
                return;

            if(square.piece != null){
                square.piece.element.remove();
            }
            square.element.appendChild(this.element);
            this.x = square.x;
            this.y = square.y;
            square.piece = this;
            this.isMovedOnce = true;
            board.newTurn();        
        }

        this.isValidMove = function(square){
            if(this.type == 'P')
                return this.isValidPawnMove(square);
            // else if(this.type == 'R')
            //     return this.isValidRookMove(square);
            // else if(this.type == 'N')
            //     return this.isValidKnightMove(square);
            // else if(this.type == 'B')
            //     return this.isValidBishopMove(square);
            // else if(this.type == 'Q')
            //     return this.isValidQueenMove(square);
            // else if(this.type == 'K')
            //     return this.isValidKingMove(square);
        }

        this.isValidPawnMove = function(square){
            if(this.color == 'white'){
                if(square.y == this.y - 1 && square.x == this.x)
                    return true;
                else if(square.y == this.y - 2 && this.isMovedOnce == false)
                    return true;
                else if(square.y == this.y - 1 && (square.x == this.x - 1 || square.x == this.x + 1))
                    return true;
            }
            else{
                if(square.y == this.y + 1 && square.x == this.x)
                    return true;
                else if(square.y == this.y + 2 && this.isMovedOnce == false)
                    return true;
                else if(square.y == this.y + 1 && (square.x == this.x - 1 || square.x == this.x + 1))
                    return true;
            }
            return false;
        }
    }
    
</script>
</body>